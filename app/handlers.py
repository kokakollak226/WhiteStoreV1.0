from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
import app.keyboards as kb
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import time

router = Router()

class standgold(StatesGroup):
    gold = State()
    bank = State()
    translate = State()

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    state.clear
    await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}', reply_markup=kb.main)
    
    
@router.message(F.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def cmd_start(message: Message, state: FSMContext):
    state.clear
    await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}', reply_markup=kb.main)
    


@router.message(F.text == '–ö—É–ø–∏—Ç—å')
async def buy(message: Message, state: FSMContext):
    await state.set_state(standgold.gold)
    await message.answer(f'üçØ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –≥–æ–ª–¥—É, –≤–≤–µ–¥–∏ –≤ —á–∞—Ç —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å. \n üí° –ù–∞–ø—Ä–∏–º–µ—Ä: 100', reply_markup=kb.menu)
    

    
@router.message(standgold.gold)
async def sum(message: Message, state: FSMContext):    
    try:
        golds = int(message.text)
        rub = int(golds)
        golda = round(golds / 0.66, 2)
        await state.update_data(gold=message.text)
        await message.answer(f'üìù –ó–∞ {rub} ‚ÇΩ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å {golda} –≥–æ–ª–¥—ã. –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –≤—ã–±–µ—Ä–∏ –Ω–∞–∏–±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π —Ç–µ–±–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', reply_markup=kb.pay) 
        await state.set_state(standgold.bank)
    except Exception:
        message.answer('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
    return golda, rub

@router.callback_query(F.data == 'translate' and standgold.bank)
async def cataloge(callback: CallbackQuery, state: FSMContext):
    await state.set_state(standgold.translate)
    await callback.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–≤–æ–¥–∞')
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–≤–æ–¥–∞', reply_markup=kb.bank)
    await callback.message.delete()

@router.callback_query(F.data == 'SBP')
async def SBP(callback: CallbackQuery, state: FSMContext):
    await callback.answer('–î–µ–π—Å—Ç–≤—É–π—Ç–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    data = await state.get_data()
    golda = int(data['gold'])
    await callback.message.answer(f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞, {data['gold']} –∏ –ø–æ–ª—É—á–∏—Ç–µ {round(golda / 0.66, 2)} –≤–∞—à–µ –ò–º—è –∏ –û—Ç—á—ë—Å—Ç–≤–æ +79087976609 –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω.–ö –¢–∏–Ω—å–∫–æ—Ñ—Ñ')
    await callback.message.delete()
    

@router.callback_query(F.data == 'Sberbank')
async def SBP(callback: CallbackQuery):
    await callback.answer('–î–µ–π—Å—Ç–≤—É–π—Ç–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    await callback.message.answer(f'üí≥–ö–∞—Ä—Ç–∞: 2202202013287409 ‚ùóÔ∏è–ü–æ–ª—É—á–∞—Ç–µ–ª—å -–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω –ê–ª–µ–∫–∞–Ω–¥—Ä–æ–≤–∏—á –ö. üí∞ –°—É–º–º–∞: {rub} ‚ÇΩ üçØ –ò–≥—Ä–æ–≤–∞—è –∫–æ–º–∏—Å—Å–∏—è —Ä—ã–Ω–∫–∞ –Ω–∞ –Ω–∞—Å. –í–∞–º –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–¥–µ—Ç —Ä–æ–≤–Ω–æ: {golda} üì∏ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ ‚úÖ –Ø –ø–µ—Ä–µ–≤–µ–ª')
    await callback.message.delete()

@router.callback_query(F.data == 'Tinkoff')
async def SBP(callback: CallbackQuery):
    await callback.answer('–î–µ–π—Å—Ç–≤—É–π—Ç–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞, –≤–∞—à–µ –ò–º—è –∏ –û—Ç—á—ë—Å—Ç–≤–æ +79087976609 –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω.–ö –¢–∏–Ω—å–∫–æ—Ñ—Ñ(–¢.–ë–∞–Ω–∫)')
    await callback.message.delete()

@router.callback_query(F.data == 'Alfa')
async def SBP(callback: CallbackQuery):
    await callback.answer('–î–µ–π—Å—Ç–≤—É–π—Ç–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞, –≤–∞—à–µ –ò–º—è –∏ –û—Ç—á—ë—Å—Ç–≤–æ +79087976609 –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω.–ö –ê–ª—å—Ñ–∞ –ë–∞–Ω–∫')
    await callback.message.delete()

@router.callback_query(F.data == 'Vtb')
async def SBP(callback: CallbackQuery):
    await callback.answer('–î–µ–π—Å—Ç–≤—É–π—Ç–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞, –≤–∞—à–µ –ò–º—è –∏ –û—Ç—á—ë—Å—Ç–≤–æ +79087976609 –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω.–ö –í—Ç–± –ë–∞–Ω–∫')
    await callback.message.delete()

@router.callback_query(F.data == 'Qiwi')
async def SBP(callback: CallbackQuery):
    await callback.answer('–î–µ–π—Å—Ç–≤—É–π—Ç–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞, –≤–∞—à–µ –ò–º—è –∏ –û—Ç—á—ë—Å—Ç–≤–æ +79087976609 –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω.–ö Qiwi –ö–æ—à–µ–ª–µ–∫')
    await callback.message.delete()

@router.callback_query(F.data == 'Ymoney')
async def SBP(callback: CallbackQuery):
    await callback.answer('–î–µ–π—Å—Ç–≤—É–π—Ç–µ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
    await callback.message.answer('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
    await callback.message.delete()